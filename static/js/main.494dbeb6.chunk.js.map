{"version":3,"sources":["Components/Images/logo.svg","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","method","type","placeholder","data-toggle","data-target","src","logo","alt","id","Component","App","Components_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+QC4FzBC,mLAtFX,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,kCAAR,oBAEFJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,gCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KACNJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAEfH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KACNJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAEfH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KACNJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAvB3B,IA8BEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMG,OAAO,MAAMF,UAAU,eAC3BH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASH,UAAU,eAAeI,YAAY,sBAE5DP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAU,gBAAgBK,cAAY,WAAWC,cAAY,oBACjFT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,qBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KACNJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,IAAKC,IAAMC,IAAI,YAI3CZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BU,GAAG,mBAC3Cb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,mBAAtB,SAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,mBAAtB,cAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,mBAAtB,UAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,mBAAtB,YAEFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cACpBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAtEjC,YAHeW,aCYNC,mLARX,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACc,EAAD,cAJUF,aCMEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.494dbeb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0b447e42.svg\";","import React, { Component } from 'react';\nimport './Style/Header.css';\nimport logo from './Images/logo.svg';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"top-bar hidden-xs\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"top-bar-links\">\n                <ul className=\"col-sm-6\">\n                  <li className=\"top-bar-email\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <a href=\"mailto:support@supportmail.com\">supportmail.com</a>\n                  </li>\n                  <li className=\"top-bar-phone\">\n                    <i className=\"fas fa-phone\"></i>\n                    <span>1-919-999-0000</span>\n                  </li>\n                </ul>\n                <div className=\"col-sm-6 soc-icons text-right no-padding\">\n                  <a href=\"/\">\n                    <i className=\"fab fa-twitter-square\"></i>\n                  </a>\n                  <a href=\"/\">\n                    <i className=\"fab fa-github-square\"></i>\n                  </a>\n                  <a href=\"/\">\n                    <i className=\"fab fa-linkedin\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> {/* // top-bar */}\n        <nav className=\"navbar navbar-static-top\">\n          <div className=\"navigation\">\n            <div className=\"container relative\">\n              <form method=\"get\" className=\"search-wrap\">\n                <input type=\"search\" className=\"form-control\" placeholder=\"Type &amp; Hit Enter\" />\n              </form>\n              <div className=\"row flex\">\n                <div className=\"navbar-header\">\n                  <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                  </button>\n                </div>\n                <div className=\"logo-container\">\n                  <div className=\"logo-wrap\">\n                    <a href=\"/\">\n                      <img className=\"logo\" src={logo} alt=\"logo\" />\n                    </a>\n                  </div>\n                </div>\n                <div className=\"col-md-9 nav-wrap flex\">\n                  <div className=\"collapse navbar-collapse\" id=\"navbar-collapse\">\n                    <ul className=\"nav navbar-nav navbar-right\">\n                      <li className=\"dropdown active\">\n                        <a href=\"/\" className=\"dropdown-toggle\">Home</a>\n                      </li>\n                      <li className=\"dropdown\">\n                        <a href=\"/\" className=\"dropdown-toggle\">Portfolio</a>\n                      </li>\n                      <li className=\"dropdown\">\n                        <a href=\"/\" className=\"dropdown-toggle\">About</a>\n                      </li>\n                      <li className=\"dropdown\">\n                        <a href=\"/\" className=\"dropdown-toggle\">Contact</a>\n                      </li>\n                      <li>\n                        <a href=\"/\" className=\"nav-search\">\n                          <i className=\"fa fa-search search-trigger\"></i>\n                          <i className=\"fa fa-times search-close\"></i>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav> {/* // nav */}\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nimport Header from './Components/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}